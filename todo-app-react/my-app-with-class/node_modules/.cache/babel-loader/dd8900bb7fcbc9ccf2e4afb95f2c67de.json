{"ast":null,"code":"var _jsxFileName = \"/home/ashish/Documents/frontend-mini-projects/todo-app-react/my-app/src/todos.js\";\nimport React, { useState } from \"react\";\n\nconst Todo = props => {\n  const {\n    todo,\n    toggleTodo,\n    deletTodo,\n    editTodo\n  } = props;\n  const [newValue, setNewValue] = useState(todo.value);\n  const [editMode, setEditMode] = useState(false);\n\n  const handleEditInput = e => {\n    console.log(e.target);\n    const {\n      value\n    } = e.target;\n    console.log(value);\n    setNewValue(value);\n  };\n\n  const handleDoubleClick = e => {\n    setEditMode(true);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"todo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"item-value\",\n    id: \"todo-\" + todo.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    className: \"ckbox\",\n    checked: todo.isCompleted,\n    onChange: () => {\n      toggleTodo(todo.id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }), !editMode ? /*#__PURE__*/React.createElement(\"p\", {\n    id: \"todo-\" + todo.id,\n    onDoubleClick: handleDoubleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, todo.value) : /*#__PURE__*/React.createElement(\"form\", {\n    className: \"edit-todo-form\",\n    onSubmit: () => {\n      editTodo(todo.id, newValue);\n      setEditMode(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"edit\",\n    id: \"todo-\" + todo.id,\n    onChange: handleEditInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"delet-div\",\n    id: \"todo-\" + todo.id,\n    onClick: () => {\n      deletTodo(todo.id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Todo;","map":{"version":3,"sources":["/home/ashish/Documents/frontend-mini-projects/todo-app-react/my-app/src/todos.js"],"names":["React","useState","Todo","props","todo","toggleTodo","deletTodo","editTodo","newValue","setNewValue","value","editMode","setEditMode","handleEditInput","e","console","log","target","handleDoubleClick","id","isCompleted"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACtB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,UAAR;AAAoBC,IAAAA,SAApB;AAA+BC,IAAAA;AAA/B,MAA4CJ,KAAlD;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAACG,IAAI,CAACM,KAAN,CAAxC;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAMY,eAAe,GAAIC,CAAD,IAAO;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAd;AACA,UAAM;AAAEP,MAAAA;AAAF,QAAYI,CAAC,CAACG,MAApB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACAD,IAAAA,WAAW,CAACC,KAAD,CAAX;AACD,GALD;;AAOA,QAAMQ,iBAAiB,GAAIJ,CAAD,IAAO;AAC/BF,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAA4B,IAAA,EAAE,EAAE,UAAUR,IAAI,CAACe,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,SAAS,EAAC,OAFZ;AAGE,IAAA,OAAO,EAAEf,IAAI,CAACgB,WAHhB;AAIE,IAAA,QAAQ,EAAE,MAAM;AACdf,MAAAA,UAAU,CAACD,IAAI,CAACe,EAAN,CAAV;AACD,KANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAUI,CAACR,QAAD,gBACE;AAAG,IAAA,EAAE,EAAE,UAAUP,IAAI,CAACe,EAAtB;AAA0B,IAAA,aAAa,EAAED,iBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGd,IAAI,CAACM,KADR,CADF,gBAKI;AACE,IAAA,SAAS,EAAC,gBADZ;AAEE,IAAA,QAAQ,EAAE,MAAM;AACdH,MAAAA,QAAQ,CAACH,IAAI,CAACe,EAAN,EAAUX,QAAV,CAAR;AACAI,MAAAA,WAAW,CAAC,KAAD,CAAX;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,SAAS,EAAC,MAFZ;AAGE,IAAA,EAAE,EAAE,UAAUR,IAAI,CAACe,EAHrB;AAIE,IAAA,QAAQ,EAAEN,eAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CAfR,CADF,eAkCE;AACE,IAAA,SAAS,EAAC,WADZ;AAEE,IAAA,EAAE,EAAE,UAAUT,IAAI,CAACe,EAFrB;AAGE,IAAA,OAAO,EAAE,MAAM;AACbb,MAAAA,SAAS,CAACF,IAAI,CAACe,EAAN,CAAT;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlCF,CADF;AA4CD,CA5DD;;AA8DA,eAAejB,IAAf","sourcesContent":["import React, { useState } from \"react\";\n\nconst Todo = (props) => {\n  const { todo, toggleTodo, deletTodo, editTodo } = props;\n  const [newValue, setNewValue] = useState(todo.value);\n  const [editMode, setEditMode] = useState(false);\n\n  const handleEditInput = (e) => {\n    console.log(e.target)\n    const { value } = e.target;\n    console.log(value)\n    setNewValue(value);\n  };\n\n  const handleDoubleClick = (e) => {\n    setEditMode(true)\n  };\n\n  return (\n    <div className=\"todo\">\n      <div className=\"item-value\" id={\"todo-\" + todo.id}>\n        <input\n          type=\"checkbox\"\n          className=\"ckbox\"\n          checked={todo.isCompleted}\n          onChange={() => {\n            toggleTodo(todo.id);\n          }}\n        />\n        {\n          !editMode ? (\n            <p id={\"todo-\" + todo.id} onDoubleClick={handleDoubleClick}>\n              {todo.value}\n            </p>\n          ) : (\n              <form\n                className=\"edit-todo-form\"\n                onSubmit={() => {\n                  editTodo(todo.id, newValue);\n                  setEditMode(false);\n                }}\n              >\n                <input\n                  type=\"text\"\n                  className=\"edit\"\n                  id={\"todo-\" + todo.id}\n                  onChange={handleEditInput}\n                />\n              </form>\n            )\n        }\n\n      </div>\n      <div\n        className=\"delet-div\"\n        id={\"todo-\" + todo.id}\n        onClick={() => {\n          deletTodo(todo.id);\n        }}\n      ></div>\n    </div>\n  );\n};\n\nexport default Todo;\n"]},"metadata":{},"sourceType":"module"}